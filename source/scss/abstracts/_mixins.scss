@use "variables" as variables;

@mixin screen-up($screen) {
  @if map-has-key(variables.$screen, $screen) {
    $screen-value: map-get(variables.$screen, $screen);
    @media only screen and (min-width: $screen-value) {
      @content;
    }
  } @else {
    @warn 'Invalid screen: #{$screen}.';
  }
}

@mixin screen-down($screen) {
  @if map-has-key(variables.$screen, $screen) {
    $screen-value: map-get(variables.$screen, $screen);
    @media only screen and (max-width: ($screen-value - 1)) {
      @content;
    }
  } @else {
    @warn 'Invalid screen: #{$screen}.';
  }
}

@mixin screen-between($lower, $upper) {
  @if map-has-key(variables.$screen, $lower) and map-has-key(variables.$screen, $upper) {
    $lower-screen: map-get(variables.$screen, $lower);
    $upper-screen: map-get(variables.$screen, $upper);
    @media only screen and (min-width: $lower-screen) and (max-width: ($upper-screen - 1)) {
      @content;
    }
  } @else {
    @if (map-has-key(variables.$screen, $lower) == false) {
      @warn 'Your lower screen was invalid: #{$lower}.';
    }
    @if (map-has-key(variables.$screen, $upper) == false) {
      @warn 'Your upper screen was invalid: #{$upper}.';
    }
  }
}

@mixin dark-mode {
  // @media (prefers-color-scheme: dark) { @content; }
  [data-theme="dark"] & {
    @content;
  }
}

@mixin light-mode {
  // @media (prefers-color-scheme: dark) { @content; }
  [data-theme="light"] & {
    @content;
  }
}

@mixin flex-center {
  display: flex;
  justify-content: center;
  align-items: center;
}

@mixin css-slider() {
  flex-wrap: nowrap;
  overflow: hidden;
  overflow-x: auto;
  -webkit-overflow-scrolling: touch;
  -ms-overflow-style: -ms-autohiding-scrollbar;
  -ms-scroll-snap-type: x mandatory;
  scroll-snap-type: x mandatory;
  display: flex;
  scroll-padding: 30px;
  &::-webkit-scrollbar {
    display: none;
  }
  > * {
    scroll-snap-align: center;
    scroll-snap-stop: always;
    flex-shrink: 0;
    order: 1;
  }
  &::after {
    content: "";
    flex-shrink: 0;
    width: 1px;
    min-height: 1px;
    display: block;
    order: 999;
  }
}

@mixin transition($effect: $ease, $sure: 0.25s) {
  transition: all $effect $sure;
}

@mixin clamp-text($lines, $maxHeight) {
  overflow: hidden;
  display: -webkit-box;
  -webkit-box-orient: vertical;
  line-clamp: $lines;
  -webkit-line-clamp: $lines;
  max-height: $maxHeight;
}

@mixin skeleton($width: 100px, $height: 20px, $borderRadius: 5px) {
  background: #eee;
  background: linear-gradient(110deg, #ececec 8%, #f5f5f5 18%, #ececec 33%);
  background-size: 200% 100%;
  animation: 1.5s shine linear infinite;
  width: $width;
  height: $height;
  border-radius: $borderRadius;
}
